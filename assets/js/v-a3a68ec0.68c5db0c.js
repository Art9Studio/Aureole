"use strict";(self.webpackChunkaureole=self.webpackChunkaureole||[]).push([[476],{6752:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-a3a68ec0",path:"/config/2fa.html",title:"Двухфакторная аутентификация",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Конфигурация Google Authenticator 2FA.",slug:"конфигурация-google-authenticator-2fa",children:[{level:3,title:"Пример конфига",slug:"пример-конфига",children:[]}]},{level:2,title:"Конфигурация SMS 2FA.",slug:"конфигурация-sms-2fa",children:[{level:3,title:"Пример конфига",slug:"пример-конфига-1",children:[]}]}],filePathRelative:"config/2fa.md",git:{contributors:[{name:"Semen Asaevich",email:"semen.asaevich@gmail.com",commits:1}]}}},1387:(n,s,a)=>{a.r(s),a.d(s,{default:()=>o});const e=(0,a(6252).uE)('<h1 id="двухфакторная-аутентификация" tabindex="-1"><a class="header-anchor" href="#двухфакторная-аутентификация" aria-hidden="true">#</a> Двухфакторная аутентификация</h1><hr><p>Описывает все свойства данной двухфакторной аутентификации. Позволяет ввести дополнительный фактор проверки позволятеля перед его аутентификацией. Плагин является встраиваемым, что позволяет комбинировать различные первичные и вторичные факторы.</p><ul><li>Тип: <strong>object</strong>. Обязательны: <code>name</code>. Наличие дополнительных свойств: <strong>Недопустимо</strong>. <ul><li><code>name</code>: Тип: <strong>string</strong>. Дополнительно: Имя экземпляра плагина. Имя плагина двухфакторной аутентификации. Имя используется для того, чтобы в дальнейшем ссылаться на данную двухфакторную аутентификацию. Минимальная длина: <strong>1</strong>.</li></ul><h4 id="допустим-один-из-вариантов-конфига" tabindex="-1"><a class="header-anchor" href="#допустим-один-из-вариантов-конфига" aria-hidden="true">#</a> Допустим один из вариантов конфига</h4><h2 id="конфигурация-google-authenticator-2fa" tabindex="-1"><a class="header-anchor" href="#конфигурация-google-authenticator-2fa" aria-hidden="true">#</a> Конфигурация Google Authenticator 2FA.</h2><ul><li>Тип: <strong>object</strong>. Конфигурация Google Authenticator 2FA. Служит для задания свойств плагина двухфакторной аутентификации. Обязательны: <code>type</code>, <code>config</code>. Наличие дополнительных свойств: <strong>Недопустимо</strong>. <ul><li><code>type</code>: Константа: <strong>google_authenticator</strong>. Тип плагина двухфакторной аутентификации. Необходим, чтобы дать Aureole понять, какой из плагинов двухфакторной аутентификации использовать.</li><li><code>config</code>: Тип: <strong>object</strong>. Конфигурация двухфакторной аутентификации. Описывает все свойства данного плагина. Наличие дополнительных свойств: <strong>Недопустимо</strong>. <ul><li><code>alg</code>: Допускаются следующие значения: <code>hotp</code>, <code>totp</code>. Значение по-умолчанию: <strong>totp</strong>. Алгоритм генерации паролей. Позволяет выбрать с помощью какого алгоритма будут генерироваться новые одноразовые пароли.</li><li><code>iss</code>: Тип: <strong>string</strong>. Значение по-умолчанию: <strong>Aureole</strong>. Имя сервиса или провайдера услуг. Идентификатор/имя стороны инициализирующей двухваторную аутентификацию (сервис/приложение, в котором аутентифицируется пользователь). Минимальная длина: <strong>1</strong>.</li><li><code>window_size</code>: Тип: <strong>integer</strong>. Значение по-умолчанию: <strong>10</strong>. Размер окна синхронизации. Кол-во итераций в попытке синхронизировать счетчики/временные отрезки клиента и сервера при их рассинхронизации. Минимальное значение: <strong>0</strong>.</li><li><code>disallow_reuse</code>: Тип: <strong>boolean</strong>. Значение по-умолчанию: <strong>False</strong>. Запрет переиспользования паролей. Возможность запретить переиспользовать валидные одноразовые пароли. Необходим только с алгоритмом TOTP, т.к. в нем пароли валидны в течении 30 секундного промежутка.</li><li><code>max_attempts</code>: Тип: <strong>integer</strong>. Значение по-умолчанию: <strong>5</strong>. Максимальное кол-во попыток. Максимальное кол-во попыток ввода одноразового пароля. При его превышении аккаунт должен блокироваться. Минимальное значение: <strong>1</strong>.</li><li><code>scratch_code</code>: Тип: <strong>object</strong>. Конфигурация кодов восстановления. Опции кодов, которые могут быть использованы при экстренного доступа к аккаунту при невозможности пройти второй фактор стандартным способом. Все коды являются одноразовыми. Наличие дополнительных свойств: <strong>Недопустимо</strong>. <ul><li><code>num</code>: Тип: <strong>integer</strong>. Значение по-умолчанию: <strong>5</strong>. Кол-во кодов. Кол-во кодов, которые будут доступные каждому пользователю. При их истечении, авторизованный пользователь может сгенерировать новые коды. Минимальное значение: <strong>0</strong>.</li><li><code>alphabet</code>: Значение по-умолчанию: <strong>alphanum</strong>. <h4 id="допустим-любои-из-вариантов-конфига" tabindex="-1"><a class="header-anchor" href="#допустим-любои-из-вариантов-конфига" aria-hidden="true">#</a> Допустим любой из вариантов конфига</h4><ul><li>Допускаются следующие значения: <code>num</code>, <code>alpha</code>, <code>alphanum</code>. Заготовленный алфавит для генерации кодов. Константные наборы символов, которые будут использоваться для генерации одноразовых паролей. num - цифры от 0 до 9, alpha - строчные и заглавные буквы английского алфавита, alphanum - и цифры и буквы алфавита.</li><li>Тип: <strong>string</strong>. Кастомный алфавит для генерации кодов. Любая строка символов, которая будет использоваться для генерации кодов. Минимальная длина: <strong>1</strong>.</li></ul></li></ul></li></ul></li></ul><h3 id="пример-конфига" tabindex="-1"><a class="header-anchor" href="#пример-конфига" aria-hidden="true">#</a> Пример конфига</h3><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">2fa</span><span class="token punctuation">:</span>\n  <span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">&quot;google_authenticator&quot;</span>\n    <span class="token key atrule">name</span><span class="token punctuation">:</span> google_authenticator\n    <span class="token key atrule">config</span><span class="token punctuation">:</span>\n      <span class="token key atrule">alg</span><span class="token punctuation">:</span> <span class="token string">&quot;hotp&quot;</span>\n      <span class="token key atrule">iss</span><span class="token punctuation">:</span> <span class="token string">&quot;Company Name&quot;</span>\n      <span class="token key atrule">window_size</span><span class="token punctuation">:</span> <span class="token number">15</span>\n      <span class="token key atrule">disallow_reuse</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n      <span class="token key atrule">max_attempts</span><span class="token punctuation">:</span> <span class="token number">5</span>\n      <span class="token key atrule">scratch_code</span><span class="token punctuation">:</span>\n        <span class="token key atrule">num</span><span class="token punctuation">:</span> <span class="token number">5</span>\n        <span class="token key atrule">alphabet</span><span class="token punctuation">:</span> <span class="token string">&quot;alphanum&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></li></ul><h2 id="конфигурация-sms-2fa" tabindex="-1"><a class="header-anchor" href="#конфигурация-sms-2fa" aria-hidden="true">#</a> Конфигурация SMS 2FA.</h2><ul><li>Тип: <strong>object</strong>. Конфигурация SMS 2FA. Служит для задания свойств плагина двухфакторной аутентификации. Обязательны: <code>type</code>, <code>config</code>. Наличие дополнительных свойств: <strong>Недопустимо</strong>. <ul><li><code>type</code>: Константа: <strong>sms</strong>. Тип плагина двухфакторной аутентификации. Необходим, чтобы дать Aureole понять, какой из плагинов двухфакторной аутентификации использовать.</li><li><code>config</code>: Тип: <strong>object</strong>. Конфигурация двухфакторной аутентификации. Описывает все свойства данного плагина. Наличие дополнительных свойств: <strong>Недопустимо</strong>. <ul><li><code>sender</code>: Тип: <strong>string</strong>. Дополнительно: Ссылка на экземпляр плагина отправителя. Ссылка на отправитель. Имя отправителя, который будет использоваться для доставки сообщений с одноразовым паролем. Минимальная длина: <strong>1</strong>.</li><li><code>template</code>: Тип: <strong>string</strong>. Дополнительно: Ссылка на один из шаблонов. Ссылка на шаблон. Имя шаблона, на основании которого будет формироваться сообщение, доставляемое пользователю. Минимальная длина: <strong>1</strong>.</li><li><code>max_attempts</code>: Тип: <strong>integer</strong>. Значение по-умолчанию: <strong>3</strong>. Максимальное количество попыток. Максимальное кол-во попыток ввода одноразового пароля. При его превышении аккаунт должен блокироваться. Минимальное значение: <strong>0</strong>.</li><li><code>otp</code>: Тип: <strong>object</strong>. Конфигурация одноразового пароля. Позволяет настроить уникальные одноразовые пароли, которые будут использоваться для входа в аккаунт. Наличие дополнительных свойств: <strong>Недопустимо</strong>. <ul><li><code>length</code>: Тип: <strong>integer</strong>. Значение по-умолчанию: <strong>6</strong>. Длина пароля. Aureole будет формировать пароль указанной длины. Минимальное значение: <strong>1</strong>.</li><li><code>alphabet</code>: Значение по-умолчанию: <strong>alphanum</strong>. <h4 id="допустим-любои-из-вариантов-конфига-1" tabindex="-1"><a class="header-anchor" href="#допустим-любои-из-вариантов-конфига-1" aria-hidden="true">#</a> Допустим любой из вариантов конфига</h4><ul><li>Допускаются следующие значения: <code>num</code>, <code>alpha</code>, <code>alphanum</code>. Заготовленный алфавит для генерации кодов. Константные наборы символов, которые будут использоваться для генерации одноразовых паролей. num - цифры от 0 до 9, alpha - строчные и заглавные буквы английского алфавита, alphanum - и цифры и буквы алфавита.</li><li>Тип: <strong>string</strong>. Кастомный алфавит для генерации кодов. Любая строка символов, которая будет использоваться для генерации кодов. Минимальная длина: <strong>1</strong>.</li></ul></li><li><code>exp</code>: Тип: <strong>integer</strong>. Дополнительно: Единицы измерения: s. Значение по-умолчанию: <strong>300</strong>. Время жизни пароля. Время, на протяжении которого пароль будет валидным. Отсчет начинается с момента формирования пароля. Минимальное значение: <strong>0</strong>.</li></ul></li></ul></li></ul><h3 id="пример-конфига-1" tabindex="-1"><a class="header-anchor" href="#пример-конфига-1" aria-hidden="true">#</a> Пример конфига</h3><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">2fa</span><span class="token punctuation">:</span>\n  <span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">&quot;sms&quot;</span>\n    <span class="token key atrule">name</span><span class="token punctuation">:</span> sms\n    <span class="token key atrule">config</span><span class="token punctuation">:</span>\n      <span class="token key atrule">sender</span><span class="token punctuation">:</span> twilio\n      <span class="token key atrule">template</span><span class="token punctuation">:</span> sms_2fa_tmpl\n      <span class="token key atrule">max_attempts</span><span class="token punctuation">:</span> <span class="token number">5</span>\n      <span class="token key atrule">otp</span><span class="token punctuation">:</span>\n        <span class="token key atrule">length</span><span class="token punctuation">:</span> <span class="token number">6</span>\n        <span class="token key atrule">alphabet</span><span class="token punctuation">:</span> <span class="token string">&quot;alphanum&quot;</span>\n        <span class="token key atrule">exp</span><span class="token punctuation">:</span> <span class="token number">60</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></li></ul></li></ul>',4),t={},o=(0,a(3744).Z)(t,[["render",function(n,s){return e}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,e]of s)n[a]=e;return n}}}]);