"use strict";(self.webpackChunkaureole=self.webpackChunkaureole||[]).push([[426],{6512:(n,s,e)=>{e.r(s),e.d(s,{data:()=>a});const a={key:"v-179fa3e7",path:"/config/authn.html",title:"Аутентификатор",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Конфигурация apple аутентификатора.",slug:"конфигурация-apple-аутентификатора",children:[{level:3,title:"Пример конфига",slug:"пример-конфига",children:[]}]},{level:2,title:"Конфигурация google аутентификатора.",slug:"конфигурация-google-аутентификатора",children:[{level:3,title:"Пример конфига",slug:"пример-конфига-1",children:[]}]},{level:2,title:"Конфигурация facebook аутентификатора.",slug:"конфигурация-facebook-аутентификатора",children:[{level:3,title:"Пример конфига",slug:"пример-конфига-2",children:[]}]},{level:2,title:"Конфигурация vk аутентификатора.",slug:"конфигурация-vk-аутентификатора",children:[{level:3,title:"Пример конфига",slug:"пример-конфига-3",children:[]}]},{level:2,title:"Конфигурация password based аутентификатора.",slug:"конфигурация-password-based-аутентификатора",children:[{level:3,title:"Пример конфига",slug:"пример-конфига-4",children:[]}]},{level:2,title:"Конфигурация email аутентификатора.",slug:"конфигурация-email-аутентификатора",children:[{level:3,title:"Пример конфига",slug:"пример-конфига-5",children:[]}]},{level:2,title:"Конфигурация phone аутентификатора.",slug:"конфигурация-phone-аутентификатора",children:[{level:3,title:"Пример конфига",slug:"пример-конфига-6",children:[]}]}],filePathRelative:"config/authn.md",git:{contributors:[{name:"Semen Asaevich",email:"semen.asaevich@gmail.com",commits:9},{name:"asaevich",email:"semen.asaevich@gmail.com",commits:1}]}}},6330:(n,s,e)=>{e.r(s),e.d(s,{default:()=>t});const a=(0,e(6252).uE)('<h1 id="аутентификатор" tabindex="-1"><a class="header-anchor" href="#аутентификатор" aria-hidden="true">#</a> Аутентификатор</h1><hr><p>Описывает все свойства данного аутентификатора. Данный плагин используется для аутентификации пользователя, предоставляя для этого различные способы, как регистрация/вход при помощи телефона/email/username и пароля, через различные соц. сети, а также беспарольный вход. Помимо регистрации и входа, плагины предоставляют дополнительный функционал, как, например, сброс пароля или верификация аккаунта.</p><ul><li>Тип: <strong>object</strong>. Наличие дополнительных свойств: <strong>Недопустимо</strong>. <ul><li><code>filter</code>: Тип: <strong>object</strong>. Перечесление фильтров данных. Перечесление фильтров, которые будут применятся к входящим данным. Фильтрация производится с применением регулярных выражений. Дает возможность более тонко контролировать процесс аутентификации тех или иных пользователей. <ul><li><code>regex(&quot;.+&quot;)</code>: Тип: <strong>string</strong>. Дополнительно: Регулярное выражение. Минимальная длина: <strong>1</strong>.</li></ul></li></ul><h4 id="допустим-один-из-вариантов-конфига" tabindex="-1"><a class="header-anchor" href="#допустим-один-из-вариантов-конфига" aria-hidden="true">#</a> Допустим один из вариантов конфига</h4><h2 id="конфигурация-apple-аутентификатора" tabindex="-1"><a class="header-anchor" href="#конфигурация-apple-аутентификатора" aria-hidden="true">#</a> Конфигурация apple аутентификатора.</h2><ul><li>Тип: <strong>object</strong>. Конфигурация apple аутентификатора. Служит для задания свойств аутентификатора. Обязательны: <code>type</code>, <code>config</code>. Наличие дополнительных свойств: <strong>Недопустимо</strong>. <ul><li><code>type</code>: Константа: <strong>apple</strong>. Тип аутентификатора. Необходим, чтобы дать Aureole понять, какой из аутентификаторов использовать.</li><li><code>config</code>: Тип: <strong>object</strong>. Конфигурация аутентификатора. Описывает все свойства данного аутентификатора. Обязательны: <code>secret_key</code>, <code>public_key</code>, <code>client_id</code>, <code>team_id</code>, <code>key_id</code>. Наличие дополнительных свойств: <strong>Недопустимо</strong>. <ul><li><code>secret_key</code>: Тип: <strong>string</strong>. Дополнительно: Ссылка на экземпляр плагина крипто-ключа. Ссылка на приватный ключ. Имя крипто ключа, который должен использоваться в качестве приватного при обращении к провайдеру. Минимальная длина: <strong>1</strong>.</li><li><code>public_key</code>: Тип: <strong>string</strong>. Дополнительно: Ссылка на экземпляр плагина крипто-ключа. Ссылка на публичный ключ. Имя крипто ключа, который должен использоваться в качестве публичного при получении данных от провайдера. Минимальная длина: <strong>1</strong>.</li><li><code>client_id</code>: Тип: <strong>string</strong>. Идентификатор приложения. Идентификатор приложения (Service ID), полученный при создании приложения у провайдера. Минимальная длина: <strong>1</strong>.</li><li><code>team_id</code>: Тип: <strong>string</strong>. Идентификатор команды. Идентификатор команды, полученный при создании приложения у провайдера. Минимальная длина: <strong>1</strong>.</li><li><code>key_id</code>: Тип: <strong>string</strong>. Идентификатор приватного ключа. Идентификатор ключа, который будет использоваться для подписи JWT при обращении к провайдеру. Минимальная длина: <strong>1</strong>.</li><li><code>scopes</code>: Тип: <strong>array</strong>. Значение по-умолчанию: <strong>[&#39;email&#39;]</strong>. Массив дополнительных разрешений. В массиве перечисляются необязательные дополнительные разрешения, которые можно запросить у провайдера. Элементы должны быть уникальными. <ul><li><strong>Элементы</strong>: Тип: <strong>string</strong>. Минимальная длина: <strong>1</strong>.</li></ul></li></ul></li></ul><h3 id="пример-конфига" tabindex="-1"><a class="header-anchor" href="#пример-конфига" aria-hidden="true">#</a> Пример конфига</h3><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">authn</span><span class="token punctuation">:</span>\n  <span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">&quot;apple&quot;</span>\n    <span class="token key atrule">config</span><span class="token punctuation">:</span>\n      <span class="token key atrule">secret_key</span><span class="token punctuation">:</span> apple_signin_key\n      <span class="token key atrule">public_key</span><span class="token punctuation">:</span> apple_keys\n      <span class="token key atrule">client_id</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>APPLE_CLIENT_ID<span class="token punctuation">}</span>\n      <span class="token key atrule">team_id</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>APPLE_TEAM_ID<span class="token punctuation">}</span>\n      <span class="token key atrule">key_id</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>APPLE_KEY_ID<span class="token punctuation">}</span>\n      <span class="token key atrule">scopes</span><span class="token punctuation">:</span>\n        <span class="token punctuation">-</span> email\n        <span class="token punctuation">-</span> name\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></li></ul><h2 id="конфигурация-google-аутентификатора" tabindex="-1"><a class="header-anchor" href="#конфигурация-google-аутентификатора" aria-hidden="true">#</a> Конфигурация google аутентификатора.</h2><ul><li>Тип: <strong>object</strong>. Конфигурация google аутентификатора. Служит для задания свойств аутентификатора. Обязательны: <code>type</code>, <code>config</code>. Наличие дополнительных свойств: <strong>Недопустимо</strong>. <ul><li><code>type</code>: Константа: <strong>google</strong>. Тип аутентификатора. Необходим, чтобы дать Aureole понять, какой из аутентификаторов использовать.</li><li><code>config</code>: Тип: <strong>object</strong>. Конфигурация аутентификатора. Описывает все свойства данного аутентификатора. Обязательны: <code>client_id</code>, <code>client_secret</code>. Наличие дополнительных свойств: <strong>Недопустимо</strong>. <ul><li><code>client_id</code>: Тип: <strong>string</strong>. Идентификатор приложения. Идентификатор приложения, полученный при создании приложения у провайдера. Минимальная длина: <strong>1</strong>.</li><li><code>client_secret</code>: Тип: <strong>string</strong>. Секрет приложения. Секрет приложения, полученный при создании приложения у провайдера. Минимальная длина: <strong>1</strong>.</li><li><code>scopes</code>: Тип: <strong>array</strong>. Значение по-умолчанию: <strong>[&#39;email&#39;]</strong>. Массив дополнительных разрешений. В массиве перечисляются необязательные дополнительные разрешения, которые можно запросить у провайдера. Элементы должны быть уникальными. <ul><li><strong>Элементы</strong>: Тип: <strong>string</strong>. Минимальная длина: <strong>1</strong>.</li></ul></li></ul></li></ul><h3 id="пример-конфига-1" tabindex="-1"><a class="header-anchor" href="#пример-конфига-1" aria-hidden="true">#</a> Пример конфига</h3><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">authn</span><span class="token punctuation">:</span>\n  <span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">&quot;google&quot;</span>\n    <span class="token key atrule">config</span><span class="token punctuation">:</span>\n      <span class="token key atrule">client_id</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>GOOGLE_CLIENT_ID<span class="token punctuation">}</span>\n      <span class="token key atrule">client_secret</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>GOOGLE_SECRET<span class="token punctuation">}</span>\n      <span class="token key atrule">scopes</span><span class="token punctuation">:</span>\n        <span class="token punctuation">-</span> https<span class="token punctuation">:</span>//www.googleapis.com/auth/userinfo.email\n        <span class="token punctuation">-</span> https<span class="token punctuation">:</span>//www.googleapis.com/auth/userinfo.profile\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li></ul><h2 id="конфигурация-facebook-аутентификатора" tabindex="-1"><a class="header-anchor" href="#конфигурация-facebook-аутентификатора" aria-hidden="true">#</a> Конфигурация facebook аутентификатора.</h2><ul><li>Тип: <strong>object</strong>. Конфигурация facebook аутентификатора. Служит для задания свойств аутентификатора. Обязательны: <code>type</code>, <code>config</code>. Наличие дополнительных свойств: <strong>Недопустимо</strong>. <ul><li><code>type</code>: Константа: <strong>facebook</strong>. Тип аутентификатора. Необходим, чтобы дать Aureole понять, какой из аутентификаторов использовать.</li><li><code>config</code>: Тип: <strong>object</strong>. Конфигурация аутентификатора. Описывает все свойства данного аутентификатора. Обязательны: <code>client_id</code>, <code>client_secret</code>. Наличие дополнительных свойств: <strong>Недопустимо</strong>. <ul><li><code>client_id</code>: Тип: <strong>string</strong>. Идентификатор приложения. Идентификатор приложения, полученный при создании приложения у провайдера. Минимальная длина: <strong>1</strong>.</li><li><code>client_secret</code>: Тип: <strong>string</strong>. Секрет приложения. Секрет приложения, полученный при создании приложения у провайдера. Минимальная длина: <strong>1</strong>.</li><li><code>scopes</code>: Тип: <strong>array</strong>. Значение по-умолчанию: <strong>[&#39;email&#39;]</strong>. Массив дополнительных разрешений. В массиве перечисляются необязательные дополнительные разрешения, которые можно запросить у провайдера. Элементы должны быть уникальными. <ul><li><strong>Элементы</strong>: Тип: <strong>string</strong>. Минимальная длина: <strong>1</strong>.</li></ul></li><li><code>fields</code>: Тип: <strong>array</strong>. Значение по-умолчанию: <strong>[&#39;email&#39;]</strong>. Массив дополнительных полей. В массиве перечисляются необязательные дополнительные поля, которые можно запросить у провайдера Элементы должны быть уникальными. <ul><li><strong>Элементы</strong>: Тип: <strong>string</strong>. Минимальная длина: <strong>1</strong>.</li></ul></li></ul></li></ul><h3 id="пример-конфига-2" tabindex="-1"><a class="header-anchor" href="#пример-конфига-2" aria-hidden="true">#</a> Пример конфига</h3><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">authn</span><span class="token punctuation">:</span>\n  <span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">&quot;facebook&quot;</span>\n    <span class="token key atrule">config</span><span class="token punctuation">:</span>\n      <span class="token key atrule">client_id</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>FACEBOOK_CLIENT_ID<span class="token punctuation">}</span>\n      <span class="token key atrule">client_secret</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>FACEBOOK_SECRET<span class="token punctuation">}</span>\n      <span class="token key atrule">scopes</span><span class="token punctuation">:</span>\n        <span class="token punctuation">-</span> email\n      <span class="token key atrule">fields</span><span class="token punctuation">:</span>\n        <span class="token punctuation">-</span> email\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li></ul><h2 id="конфигурация-vk-аутентификатора" tabindex="-1"><a class="header-anchor" href="#конфигурация-vk-аутентификатора" aria-hidden="true">#</a> Конфигурация vk аутентификатора.</h2><ul><li>Тип: <strong>object</strong>. Конфигурация vk аутентификатора. Служит для задания свойств аутентификатора. Обязательны: <code>type</code>, <code>config</code>. Наличие дополнительных свойств: <strong>Недопустимо</strong>. <ul><li><code>type</code>: Константа: <strong>vk</strong>. Тип аутентификатора. Необходим, чтобы дать Aureole понять, какой из аутентификаторов использовать.</li><li><code>config</code>: Тип: <strong>object</strong>. Конфигурация аутентификатора. Описывает все свойства данного аутентификатора. Обязательны: <code>client_id</code>, <code>client_secret</code>. Наличие дополнительных свойств: <strong>Недопустимо</strong>. <ul><li><code>client_id</code>: Тип: <strong>string</strong>. Идентификатор приложения. Идентификатор приложения, полученный при создании приложения у провайдера. Минимальная длина: <strong>1</strong>.</li><li><code>client_secret</code>: Тип: <strong>string</strong>. Секрет приложения. Секрет приложения, полученный при создании приложения у провайдера. Минимальная длина: <strong>1</strong>.</li><li><code>scopes</code>: Тип: <strong>array</strong>. Значение по-умолчанию: <strong>[&#39;email&#39;]</strong>. Массив дополнительных разрешений. В массиве перечисляются необязательные дополнительные разрешения, которые можно запросить у провайдера. Элементы должны быть уникальными. <ul><li><strong>Элементы</strong>: Тип: <strong>string</strong>. Минимальная длина: <strong>1</strong>.</li></ul></li><li><code>fields</code>: Тип: <strong>array</strong>. Массив дополнительных полей. В массиве перечисляются необязательные дополнительные поля, которые можно запросить у провайдера Элементы должны быть уникальными. <ul><li><strong>Элементы</strong>: Тип: <strong>string</strong>. Минимальная длина: <strong>1</strong>.</li></ul></li></ul></li></ul><h3 id="пример-конфига-3" tabindex="-1"><a class="header-anchor" href="#пример-конфига-3" aria-hidden="true">#</a> Пример конфига</h3><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">authn</span><span class="token punctuation">:</span>\n  <span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">&quot;vk&quot;</span>\n    <span class="token key atrule">config</span><span class="token punctuation">:</span>\n      <span class="token key atrule">client_id</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>VK_CLIENT_ID<span class="token punctuation">}</span>\n      <span class="token key atrule">client_secret</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>VK_SECRET<span class="token punctuation">}</span>\n      <span class="token key atrule">scopes</span><span class="token punctuation">:</span>\n        <span class="token punctuation">-</span> email\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></li></ul><h2 id="конфигурация-password-based-аутентификатора" tabindex="-1"><a class="header-anchor" href="#конфигурация-password-based-аутентификатора" aria-hidden="true">#</a> Конфигурация password based аутентификатора.</h2><ul><li>Тип: <strong>object</strong>. Конфигурация password based аутентификатора. Служит для задания свойств аутентификатора. Обязательны: <code>type</code>, <code>config</code>. Наличие дополнительных свойств: <strong>Недопустимо</strong>. <ul><li><code>type</code>: Константа: <strong>password_based</strong>. Тип аутентификатора. Необходим, чтобы дать Aureole понять, какой из аутентификаторов использовать.</li><li><code>config</code>: Тип: <strong>object</strong>. Конфигурация аутентификатора. Описывает все свойства данного аутентификатора. Обязательны: <code>main_hasher</code>. Наличие дополнительных свойств: <strong>Недопустимо</strong>. <ul><li><code>main_hasher</code>: Тип: <strong>object</strong>. Хэшер. Конфигурация хэшера, которым плагин будет хэшировать пароли. Наличие дополнительных свойств: <strong>Недопустимо</strong>. <h4 id="допустим-один-из-вариантов-конфига-1" tabindex="-1"><a class="header-anchor" href="#допустим-один-из-вариантов-конфига-1" aria-hidden="true">#</a> Допустим один из вариантов конфига</h4><ul><li>Тип: <strong>object</strong>. Обязательны: <code>type</code>, <code>config</code>. Наличие дополнительных свойств: <strong>Недопустимо</strong>. <ul><li><code>type</code>: Константа: <strong>argon2</strong>. Тип хэшера. Необходим, чтобы дать Aureole понять, какой из хэшеров использовать.</li><li><code>config</code>: Тип: <strong>object</strong>. Конфигурация хэшера. Описывает все свойства данного хэшера. Наличие дополнительных свойств: <strong>Недопустимо</strong>. <ul><li><code>kind</code>: Допускаются следующие значения: <code>argon2i</code>, <code>argon2id</code>. Значение по-умолчанию: <strong>argon2i</strong>. Версия алгоритма. Указывает, какую из версий алгоритма следует использовать при хэшировании.</li><li><code>iterations</code>: Тип: <strong>integer</strong>. Значение по-умолчанию: <strong>3</strong>. Количество итераций. Количество итераций алгоритма по памятию Минимальное значение: <strong>1</strong>.</li><li><code>parallelism</code>: Тип: <strong>integer</strong>. Значение по-умолчанию: <strong>2</strong>. Степень параллелизма. Указвает количество потоков, на которое можно распараллелить алгоритм. Минимальное значение: <strong>1</strong>.</li><li><code>salt_length</code>: Тип: <strong>integer</strong>. Значение по-умолчанию: <strong>16</strong>. Длина соли. Длина соли, которую будет генерировать Aureole при хэшировании. Минимальное значение: <strong>1</strong>.</li><li><code>key_length</code>: Тип: <strong>integer</strong>. Значение по-умолчанию: <strong>32</strong>. Длина ключа. Длина исходного хэша. Минимальное значение: <strong>1</strong>.</li><li><code>memory</code>: Тип: <strong>integer</strong>. Значение по-умолчанию: <strong>32768</strong>. Количество памяти. Количествл памяти, которое может использовать алгоритм. Минимальное значение: <strong>1</strong>.</li></ul></li></ul></li><li>Тип: <strong>object</strong>. Обязательны: <code>type</code>. Наличие дополнительных свойств: <strong>Недопустимо</strong>. <ul><li><code>type</code>: Константа: <strong>pbkdf2</strong>. Тип хэшера. Необходим, чтобы дать Aureole понять, какой из хэшеров использовать.</li><li><code>config</code>: Тип: <strong>object</strong>. Конфигурация хэшера. Описывает все свойства данного хэшера. Наличие дополнительных свойств: <strong>Недопустимо</strong>. <ul><li><code>func</code>: Допускаются следующие значения: <code>sha1</code>, <code>sha224</code>, <code>sha256</code>, <code>sha384</code>, <code>sha512</code>. Значение по-умолчанию: <strong>sha256</strong>. Имя хэш-функции. Имя хэш-функции, которая будет использоваться алгоритмом.</li><li><code>iterations</code>: Тип: <strong>integer</strong>. Значение по-умолчанию: <strong>260000</strong>. Количество итераций. Количество итераций алгоритма по памятию Минимальное значение: <strong>1</strong>.</li><li><code>salt_length</code>: Тип: <strong>integer</strong>. Значение по-умолчанию: <strong>22</strong>. Длина соли. Длина соли, которую будет генерировать Aureole при хэшировании. Минимальное значение: <strong>1</strong>.</li><li><code>key_length</code>: Тип: <strong>integer</strong>. Значение по-умолчанию: <strong>32</strong>. Длина ключа. Длина исходного хэша. Минимальное значение: <strong>1</strong>.</li></ul></li></ul></li></ul></li><li><code>compat_hashers</code>: Тип: <strong>array</strong>. Массив хэшеров Перечисление совместимых хэшеров. Если пароль был зашифрован одним из них, Aureole будет использовать данный хэшер для сравнения паролей. Элементы должны быть уникальными. <ul><li><strong>Элементы</strong>: Тип: <strong>object</strong>. Хэшер. Конфигурация хэшера, которым плагин будет хэшировать пароли. Наличие дополнительных свойств: <strong>Недопустимо</strong>. <h4 id="допустим-один-из-вариантов-конфига-2" tabindex="-1"><a class="header-anchor" href="#допустим-один-из-вариантов-конфига-2" aria-hidden="true">#</a> Допустим один из вариантов конфига</h4><ul><li>Тип: <strong>object</strong>. Обязательны: <code>type</code>, <code>config</code>. Наличие дополнительных свойств: <strong>Недопустимо</strong>. <ul><li><code>type</code>: Константа: <strong>argon2</strong>. Тип хэшера. Необходим, чтобы дать Aureole понять, какой из хэшеров использовать.</li><li><code>config</code>: Тип: <strong>object</strong>. Конфигурация хэшера. Описывает все свойства данного хэшера. Наличие дополнительных свойств: <strong>Недопустимо</strong>. <ul><li><code>kind</code>: Допускаются следующие значения: <code>argon2i</code>, <code>argon2id</code>. Значение по-умолчанию: <strong>argon2i</strong>. Версия алгоритма. Указывает, какую из версий алгоритма следует использовать при хэшировании.</li><li><code>iterations</code>: Тип: <strong>integer</strong>. Значение по-умолчанию: <strong>3</strong>. Количество итераций. Количество итераций алгоритма по памятию Минимальное значение: <strong>1</strong>.</li><li><code>parallelism</code>: Тип: <strong>integer</strong>. Значение по-умолчанию: <strong>2</strong>. Степень параллелизма. Указвает количество потоков, на которое можно распараллелить алгоритм. Минимальное значение: <strong>1</strong>.</li><li><code>salt_length</code>: Тип: <strong>integer</strong>. Значение по-умолчанию: <strong>16</strong>. Длина соли. Длина соли, которую будет генерировать Aureole при хэшировании. Минимальное значение: <strong>1</strong>.</li><li><code>key_length</code>: Тип: <strong>integer</strong>. Значение по-умолчанию: <strong>32</strong>. Длина ключа. Длина исходного хэша. Минимальное значение: <strong>1</strong>.</li><li><code>memory</code>: Тип: <strong>integer</strong>. Значение по-умолчанию: <strong>32768</strong>. Количество памяти. Количествл памяти, которое может использовать алгоритм. Минимальное значение: <strong>1</strong>.</li></ul></li></ul></li><li>Тип: <strong>object</strong>. Обязательны: <code>type</code>. Наличие дополнительных свойств: <strong>Недопустимо</strong>. <ul><li><code>type</code>: Константа: <strong>pbkdf2</strong>. Тип хэшера. Необходим, чтобы дать Aureole понять, какой из хэшеров использовать.</li><li><code>config</code>: Тип: <strong>object</strong>. Конфигурация хэшера. Описывает все свойства данного хэшера. Наличие дополнительных свойств: <strong>Недопустимо</strong>. <ul><li><code>func</code>: Допускаются следующие значения: <code>sha1</code>, <code>sha224</code>, <code>sha256</code>, <code>sha384</code>, <code>sha512</code>. Значение по-умолчанию: <strong>sha256</strong>. Имя хэш-функции. Имя хэш-функции, которая будет использоваться алгоритмом.</li><li><code>iterations</code>: Тип: <strong>integer</strong>. Значение по-умолчанию: <strong>260000</strong>. Количество итераций. Количество итераций алгоритма по памятию Минимальное значение: <strong>1</strong>.</li><li><code>salt_length</code>: Тип: <strong>integer</strong>. Значение по-умолчанию: <strong>22</strong>. Длина соли. Длина соли, которую будет генерировать Aureole при хэшировании. Минимальное значение: <strong>1</strong>.</li><li><code>key_length</code>: Тип: <strong>integer</strong>. Значение по-умолчанию: <strong>32</strong>. Длина ключа. Длина исходного хэша. Минимальное значение: <strong>1</strong>.</li></ul></li></ul></li></ul></li></ul></li><li><code>register</code>: Тип: <strong>object</strong>. Конфигурация регистрации. Описывает поля, которые нужны Aureole для регистрации пользователей. Наличие дополнительных свойств: <strong>Недопустимо</strong>. <ul><li><code>login_after</code>: Тип: <strong>boolean</strong>. Значение по-умолчанию: <strong>False</strong>. Флаг логина после регистрации. Определяет, необходимо ли осуществлять автоматический логин пользователя после его регистрации.</li><li><code>verify_after</code>: Тип: <strong>boolean</strong>. Значение по-умолчанию: <strong>False</strong>. Флаг верификации акаунта после регистрации. Определяет, необходимо ли осуществлять автоматическую верификацию аккаунта после его регистрации.</li></ul></li><li><code>password_reset</code>: Тип: <strong>object</strong>. Конфигурация сброса пароля. Описывает поля, которые нужны Aureole для сброса пользовательского пароля. Обязательны: <code>sender</code>, <code>template</code>. Наличие дополнительных свойств: <strong>Недопустимо</strong>. <ul><li><code>sender</code>: Тип: <strong>string</strong>. Дополнительно: Ссылка на экземпляр плагина отправителя. Ссылка на отправитель. Имя отправителя, который будет использоваться для доставки писем с ссылкой на сброс пароля. Минимальная длина: <strong>1</strong>.</li><li><code>template</code>: Тип: <strong>string</strong>. Дополнительно: Ссылка на один из шаблонов. Ссылка на шаблон. Имя шаблона, на основании которого будет формироваться письмо, доставляемое пользователю. Минимальная длина: <strong>1</strong>.</li><li><code>exp</code>: Тип: <strong>integer</strong>. Дополнительно: Единицы измерения: s. Значение по-умолчанию: <strong>3600</strong>. Время жизни токена. Время, на протяжении которого токен будет валидным. Отсчет начинается с момента формирования токена. Минимальное значение: <strong>0</strong>.</li></ul></li><li><code>verification</code>: Тип: <strong>object</strong>. Конфигурация верификации аккаунтов. Описывает поля, которые нужны Aureole для верификации пользовательских аккаунтов. Обязательны: <code>sender</code>, <code>template</code>. Наличие дополнительных свойств: <strong>Недопустимо</strong>. <ul><li><code>sender</code>: Тип: <strong>string</strong>. Дополнительно: Ссылка на экземпляр плагина отправителя. Ссылка на отправитель. Имя отправителя, который будет использоваться для доставки писем с ссылкой для верификации аккаунта. Минимальная длина: <strong>1</strong>.</li><li><code>template</code>: Тип: <strong>string</strong>. Дополнительно: Ссылка на один из шаблонов. Ссылка на шаблон. Имя шаблона, на основании которого будет формироваться письмо, доставляемое пользователю. Минимальная длина: <strong>1</strong>.</li><li><code>exp</code>: Тип: <strong>integer</strong>. Дополнительно: Единицы измерения: s. Значение по-умолчанию: <strong>3600</strong>. Время жизни токена. Время, на протяжении которого токен будет валидным. Отсчет начинается с момента формирования токена. Минимальное значение: <strong>0</strong>.</li></ul></li></ul></li></ul><h3 id="пример-конфига-4" tabindex="-1"><a class="header-anchor" href="#пример-конфига-4" aria-hidden="true">#</a> Пример конфига</h3><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">authN</span><span class="token punctuation">:</span>\n  <span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">&quot;password_based&quot;</span>\n    <span class="token key atrule">config</span><span class="token punctuation">:</span>\n      <span class="token key atrule">main_hasher</span><span class="token punctuation">:</span> argon2\n      <span class="token key atrule">password_reset</span><span class="token punctuation">:</span>\n        <span class="token key atrule">sender</span><span class="token punctuation">:</span> email\n        <span class="token key atrule">template</span><span class="token punctuation">:</span> reset\n        <span class="token key atrule">exp</span><span class="token punctuation">:</span> <span class="token number">3600</span>\n      <span class="token key atrule">verification</span><span class="token punctuation">:</span>\n        <span class="token key atrule">sender</span><span class="token punctuation">:</span> email\n        <span class="token key atrule">template</span><span class="token punctuation">:</span> email_verification\n        <span class="token key atrule">exp</span><span class="token punctuation">:</span> <span class="token number">3600</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></li></ul><h2 id="конфигурация-email-аутентификатора" tabindex="-1"><a class="header-anchor" href="#конфигурация-email-аутентификатора" aria-hidden="true">#</a> Конфигурация email аутентификатора.</h2><ul><li>Тип: <strong>object</strong>. Конфигурация email аутентификатора. Служит для задания свойств аутентификатора. Обязательны: <code>type</code>, <code>config</code>. Наличие дополнительных свойств: <strong>Недопустимо</strong>. <ul><li><code>type</code>: Константа: <strong>email</strong>. Тип аутентификатора. Необходим, чтобы дать Aureole понять, какой из аутентификаторов использовать.</li><li><code>config</code>: Тип: <strong>object</strong>. Конфигурация аутентификатора. Описывает все свойства данного аутентификатора. Обязательны: <code>sender</code>, <code>template</code>. Наличие дополнительных свойств: <strong>Недопустимо</strong>. <ul><li><code>sender</code>: Тип: <strong>string</strong>. Дополнительно: Ссылка на экземпляр плагина отправителя. Ссылка на отправитель. Имя отправителя, который будет использоваться для доставки писем с магической ссылкой. Минимальная длина: <strong>1</strong>.</li><li><code>template</code>: Тип: <strong>string</strong>. Дополнительно: Ссылка на один из шаблонов. Ссылка на шаблон. Имя шаблона, на основании которого будет формироваться письмо, доставляемое пользователю. Минимальная длина: <strong>1</strong>.</li><li><code>exp</code>: Тип: <strong>integer</strong>. Дополнительно: Единицы измерения: s. Значение по-умолчанию: <strong>3600</strong>. Время жизни токена. Время, на протяжении которого токен будет валидным. Отсчет начинается с момента формирования токена. Минимальное значение: <strong>0</strong>.</li></ul></li></ul><h3 id="пример-конфига-5" tabindex="-1"><a class="header-anchor" href="#пример-конфига-5" aria-hidden="true">#</a> Пример конфига</h3><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">authN</span><span class="token punctuation">:</span>\n  <span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">&quot;email&quot;</span>\n    <span class="token key atrule">config</span><span class="token punctuation">:</span>\n      <span class="token key atrule">sender</span><span class="token punctuation">:</span> email\n      <span class="token key atrule">template</span><span class="token punctuation">:</span> magic_link\n      <span class="token key atrule">exp</span><span class="token punctuation">:</span> <span class="token number">300</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li></ul><h2 id="конфигурация-phone-аутентификатора" tabindex="-1"><a class="header-anchor" href="#конфигурация-phone-аутентификатора" aria-hidden="true">#</a> Конфигурация phone аутентификатора.</h2><ul><li>Тип: <strong>object</strong>. Конфигурация phone аутентификатора. Служит для задания свойств аутентификатора. Обязательны: <code>type</code>, <code>config</code>. Наличие дополнительных свойств: <strong>Недопустимо</strong>. <ul><li><code>type</code>: Константа: <strong>phone</strong>. Тип аутентификатора. Необходим, чтобы дать Aureole понять, какой из аутентификаторов использовать.</li><li><code>config</code>: Тип: <strong>object</strong>. Конфигурация аутентификатора. Описывает все свойства данного аутентификатора. Обязательны: <code>sender</code>, <code>template</code>. Наличие дополнительных свойств: <strong>Недопустимо</strong>. <ul><li><code>sender</code>: Тип: <strong>string</strong>. Дополнительно: Ссылка на экземпляр плагина отправителя. Ссылка на отправитель. Имя отправителя, который будет использоваться для доставки сообщений с одноразовым паролем. Минимальная длина: <strong>1</strong>.</li><li><code>template</code>: Тип: <strong>string</strong>. Дополнительно: Ссылка на один из шаблонов. Ссылка на шаблон. Имя шаблона, на основании которого будет формироваться сообщение, доставляемое пользователю. Минимальная длина: <strong>1</strong>.</li><li><code>max_attempts</code>: Тип: <strong>integer</strong>. Значение по-умолчанию: <strong>3</strong>. Максимальное количество попыток. Максимальное количество попыток ввода одноразового пароля. При превышении количества попыток пароль становится невалидным. Минимальное значение: <strong>0</strong>.</li><li><code>otp</code>: Тип: <strong>object</strong>. Конфигурация одноразового пароля. Позволяет настроить уникальные одноразовые пароли, которые будут использоваться для входа в аккаунт. Наличие дополнительных свойств: <strong>Недопустимо</strong>. <ul><li><code>length</code>: Тип: <strong>integer</strong>. Значение по-умолчанию: <strong>6</strong>. Длина пароля. Aureole будет формировать пароль указанной длины. Минимальное значение: <strong>1</strong>.</li><li><code>alphabet</code>: Значение по-умолчанию: <strong>num</strong>. <h4 id="допустим-любои-из-вариантов-конфига" tabindex="-1"><a class="header-anchor" href="#допустим-любои-из-вариантов-конфига" aria-hidden="true">#</a> Допустим любой из вариантов конфига</h4><ul><li>Допускаются следующие значения: <code>num</code>, <code>alpha</code>, <code>alphanum</code>. Заготовленный алфавит для генерации кодов. Константные наборы символов, которые будут использоваться для генерации одноразовых паролей. num - цифры от 0 до 9, alpha - строчные и заглавные буквы английского алфавита, alphanum - и цифры и буквы алфавита.</li><li>Тип: <strong>string</strong>. Кастомный алфавит для генерации кодов. Любая строка символов, которая будет использоваться для генерации кодов. Минимальная длина: <strong>1</strong>.</li></ul></li><li><code>prefix</code>: Тип: <strong>string</strong>. Префикс одноразового пароля. При формировании пароля Aureole будет добавлять указанный префикс ко всем паролям.</li><li><code>postfix</code>: Тип: <strong>string</strong>. Постфикс одноразового пароля. При формировании пароля Aureole будет добавлять указанный постфикс ко всем паролям.</li><li><code>exp</code>: Тип: <strong>integer</strong>. Дополнительно: Единицы измерения: s. Значение по-умолчанию: <strong>300</strong>. Время жизни пароля. Время, на протяжении которого пароль будет валидным. Отсчет начинается с момента формирования пароля. Минимальное значение: <strong>0</strong>.</li></ul></li></ul></li></ul><h3 id="пример-конфига-6" tabindex="-1"><a class="header-anchor" href="#пример-конфига-6" aria-hidden="true">#</a> Пример конфига</h3><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">authn</span><span class="token punctuation">:</span>\n  <span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">&quot;phone&quot;</span>\n    <span class="token key atrule">config</span><span class="token punctuation">:</span>\n      <span class="token key atrule">hasher</span><span class="token punctuation">:</span> django\n      <span class="token key atrule">sender</span><span class="token punctuation">:</span> twilio\n      <span class="token key atrule">template</span><span class="token punctuation">:</span> phone_otp\n      <span class="token key atrule">max_attempts</span><span class="token punctuation">:</span> <span class="token number">3</span>\n      <span class="token key atrule">otp</span><span class="token punctuation">:</span>\n        <span class="token key atrule">length</span><span class="token punctuation">:</span> <span class="token number">6</span>\n        <span class="token key atrule">alphabet</span><span class="token punctuation">:</span> num\n        <span class="token key atrule">prefix</span><span class="token punctuation">:</span> A<span class="token punctuation">-</span>\n        <span class="token key atrule">postfix</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>B\n        <span class="token key atrule">exp</span><span class="token punctuation">:</span> <span class="token number">300</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div></li></ul></li></ul>',4),o={},t=(0,e(3744).Z)(o,[["render",function(n,s){return a}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[e,a]of s)n[e]=a;return n}}}]);