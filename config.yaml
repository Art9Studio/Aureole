api_version: "0.1"

apps:
  one:
    path_prefix: "/one"
    storage:
      connection_url: "postgresql://root:password@localhost:5432/test?sslmode=disable&search_path=public"
    auth:
      use_existent_collection: false
      user_collection:
        name: "users"
        pk: "id"
        user_unique: "username"
        user_confirm: "password"
      login:
        fields:
          user_unique: "{$.name}"
          user_confirm: "{$.passwd}"
        payload:
          "$.userID": "id"
      register:
        login_after: false
        fields:
          user_unique: "{$.name}"
          user_confirm: "{$.passwd}"
          email: "{$.email}"
#  two:
#    path_prefix: "/two"
#    storage:
#      connection_url: "mongodb://admin:admin@localhost:27017/gouth"
#    auth:
#      use_existent_collection: true
#      user_collection:
#        name: "users"
#        user_id: "username"
#        user_confirm: "password"
#      login:
#        fields:
#          user_unique: "$.name"
#          user_confirm: "$.passwd"
#        payload:
#          "$.userID": "id"
#      register:
#        login_after: true
#        fields:
#          user_unique: "$.name"
#          user_confirm: "$.passwd"
#          email: "$.email"
  three:
    path_prefix: "/three"
    storage:
      connection_config:
        adapter: "postgresql"
        username: "root"
        password: "password"
        host: "localhost"
        port: "5432"
        db_name: "test"
        options:
          sslmode: "disable"
          search_path: "public"
    auth:
      use_existent_collection: true
      user_collection:
        name: "users"
        pk: "id"
        user_unique: "username"
        user_confirm: "password"
      login:
        fields:
          user_unique: "{$.name}"
          user_confirm: "{$.passwd}"
        payload:
          "$.userID": "id"
      register:
        login_after: true
        fields:
          user_unique: "{$.name}"
          user_confirm: "{$.passwd}"
          email: "{$.email}"