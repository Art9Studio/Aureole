api_version: "0.1"

service:
  enc_key: service_enc_key
  sign_key: service_sign_key
  storage: service_store

apps:
  - name: aureole_app
    path_prefix: /aureole-app
    host: http://localhost:3000
    auth_session_exp: 86400
    
    authZ: jwt_authz
    2fa: google_auth_2fa

    authN:
      - type: "password_based"
        config:
          main_hasher: argon2
          register:
            login_after: false
            verify_after: false
          password_reset:
            sender: email
            template: reset
            exp: 3600
          verification:
            sender: email
            template: email_verification
            exp: 3600

      - type: "email"
        config:
          sender: email
          template: magic_link
          exp: 3600

      - type: "phone"
        config:
          hasher: django
          sender: twilio
          template: phone_otp
          max_attempts: 3
          otp:
            length: 6
            alphabet: "1234567890"
            prefix: A-
            postfix: -B
            exp: 300

      - type: "google"
        filter:
          email: ".*\\.aureole.cloud"
        config:
          client_id: ${GOOGLE_CLIENT_ID}
          client_secret: ${GOOGLE_SECRET}
          scopes:
            - https://www.googleapis.com/auth/userinfo.email
            - https://www.googleapis.com/auth/userinfo.profile

      - type: "vk"
        config:
          client_id: ${VK_CLIENT_ID}
          client_secret: ${VK_SECRET}
          scopes:
            - email
          fields: [ ]

      - type: "facebook"
        config:
          client_id: ${FACEBOOK_CLIENT_ID}
          client_secret: ${FACEBOOK_SECRET}
          scopes:
            - email
          fields:
            - email

      - type: "apple"
        config:
          secret_key: apple_signin_key
          public_key: apple_keys
          client_id: ${APPLE_CLIENT_ID}
          team_id: ${APPLE_TEAM_ID}
          key_id: ${APPLE_KEY_ID}
          scopes:
            - email
            - name

authZ:
  - type: "jwt"
    name: jwt_authz
    config:
      iss: Aureole Server
      sub: true
      aud:
        - app1
        - app2
      nbf: 0
      iat: true
      access_bearer: cookie # [cookie, header, both]
      refresh_bearer: body # [cookie, body, both]
      sign_key: jwk_file
      verify_keys: [ jwk_file ]
      access_exp: 900
      refresh_exp: 7890000
      payload: lab/templates/jwt_payload.json.tmpl

2fa:
  - type: "sms"
    name: sms_2fa
    config:
      sender: twilio
      template: 2fa_tmpl
      max_attempts: 5
      otp:
        length: 6
        alphabet: alphanum
        exp: 60

#  - type: "yubikey"
#    name: yubikey_2fa
#    config:

  - type: "google_authenticator"
    name: google_auth_2fa
    config:
      alg: hotp
      iss: Company Name
      window_size: 15
      disallow_reuse: false
      max_attempts: 5
      scratch_code:
        num: 5
        alphabet: alphanum # todo: support regex range syntax '[a-z1-9]'

storages:
  - type: "etcd"
    name: etcd_store
    config:
      endpoints:
        - localhost:2379
      timeout: 0.2
      dial_timeout: 3

  - type: "redis"
    name: redis_store
    config:
      address: localhost:6379
      password: ${REDIS_PASSWORD}
      db: 0

  - type: "redis"
    name: service_store
    config:
      address: localhost:6379
      password: ${REDIS_PASSWORD}
      db: 1

  - type: "memory"
    name: memory_store
    config:
      size: 100

key_storages:
  - type: "url"
    name: google_keys_store
    config:
      path: https://www.googleapis.com/oauth2/v3/certs

  - type: "url"
    name: apple_keys_store
    config:
      path: https://appleid.apple.com/auth/keys

  - type: "file"
    name: jwk_keys_store
    config:
      path: lab/keys/keys.json

  - type: "file"
    name: apple_signin_keys_store
    config:
      path: lab/keys/apple_private_key.p8

  - type: "file"
    name: gen_keys_store
    config:
      path: lab/keys/gen_keys.json

  - type: "vault"
    name: vault_store
    config:
      token: s.5qhJ1R3VcvwwCJQpdAjY7Lw0
      address: http://127.0.0.1:8200
      path: /secret/keys

  - type: "file"
    name: service_sign_store
    config:
      path: lab/keys/service_sign_key.json

  - type: "file"
    name: service_enc_store
    config:
      path: lab/keys/service_enc_key.json

hashers:
  - type: "argon2"
    name: argon2
    config:
      kind: argon2i
      iterations: 1
      parallelism: 1
      salt_length: 16
      key_length: 16
      memory: 16384

  - type: "pbkdf2"
    name: django
    config:
      func: sha256
      iterations: 260000
      salt_length: 22
      key_length: 32

crypto_keys:
  - type: "jwk"
    name: jwk_file
    config:
      refresh_interval: 20
      storage: jwk_keys_store

  - type: "jwk"
    name: jwk_url
    config:
      storage: google_keys_store

  - type: "pem"
    name: apple_signin_key
    config:
      alg: ES256
      storage: apple_signin_keys_store

  - type: "jwk"
    name: apple_keys
    config:
      storage: apple_keys_store

  - type: "jwk"
    name: gen_keys
    config:
      kty: RSA
      alg: RS256
      size: 2048
      kid: SHA-256
      storage: gen_keys_store

  - type: "jwk"
    name: service_sign_key
    config:
      kty: RSA
      alg: RS256
      size: 2048
      kid: SHA-256
      storage: service_sign_store

  - type: "jwk"
    name: service_enc_key
    config:
      kty: EC
      alg: ES256
      use: enc
      curve: P-256
      kid: SHA-256
      storage: service_enc_store

senders:
  - type: "email"
    name: email
    config:
      host: smtp.gmail.com:587
      username: test.aureole@gmail.com
      password: ${SMTP_PASSWORD}
      from: test.aureole@gmail.com
      bcc: [ ]
      cc: [ ]
      templates:
        default_text: lab/templates/default.txt
        default_html: lab/templates/default.html
        reset: lab/templates/password_reset.txt
        magic_link: lab/templates/magic_link.txt
        email_verification: lab/templates/email_verification.txt

  - type: "twilio"
    name: twilio
    config:
      account_sid: ${TEST_TWILIO_ACCOUNT_SID}
      auth_token: ${TEST_TWILIO_AUTH_TOKEN}
      from: ${TEST_TWILIO_PHONE_NUMBER}
      templates:
        phone_otp: lab/templates/phone_otp.txt

admin_plugins:
  - type: "urls"
    name: get-urls