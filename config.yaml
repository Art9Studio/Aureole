api_version: "0.1"

apps:
  - name: one
    path_prefix: "/one"
    host: "http://localhost:3000"

    authN:
      - type: "password_based"
        config:
          main_hasher: argon2
          register:
            login_after: false
            verify_after: false
          password_reset:
            sender: email
            template: reset
            exp: 3600
          verification:
            sender: email
            template: email_verification
            exp: 3600

      - type: "email"
        config:
          sender: email
          template: magic_link
          exp: 3600

      - type: "phone"
        config:
          hasher: django
          sender: twilio
          template: phone_otp
          max_attempts: 3
          otp:
            length: 6
            alphabet: "1234567890"
            prefix: "A-"
            postfix: "-B"
            exp: 300

      - type: "google"
        filter:
          email: ".*\\.aureole.cloud"
        config:
          client_id: "${GOOGLE_CLIENT_ID}"
          client_secret: "${GOOGLE_SECRET}"
          scopes:
            - "https://www.googleapis.com/auth/userinfo.email"
            - "https://www.googleapis.com/auth/userinfo.profile"

      - type: "vk"
        config:
          client_id: "${VK_CLIENT_ID}"
          client_secret: "${VK_SECRET}"
          scopes:
            - "email"
          fields: [ ]

      - type: "facebook"
        config:
          client_id: "${FACEBOOK_CLIENT_ID}"
          client_secret: "${FACEBOOK_SECRET}"
          scopes:
            - "email"
          fields:
            - "email"

      - type: "apple"
        config:
          secret_key: apple_signin_key
          public_key: apple_keys
          client_id: "${APPLE_CLIENT_ID}"
          team_id: "${APPLE_TEAM_ID}"
          key_id: "${APPLE_KEY_ID}"
          scopes:
            - "email"
            - "name"

    authZ:
      type: "jwt"
      config:
        iss: "Aureole Server"
        sub: true
        aud: [ "app1", "app2" ]
        nbf: 0
        iat: true
        jti: "0" # todo: implement jti
        access_bearer: "cookie" # [cookie, header, both]
        refresh_bearer: "body" # [cookie, body, both]
        sign_key: jwk_file
        verify_keys: [ jwk_file ]
        access_exp: 900
        refresh_exp: 7890000
        payload: "lab/templates/jwt_payload.json.tmpl"

storages:
  - type: "postgresql"
    name: one_db
    config:
      url: "postgresql://root:password@localhost:5432/aureole"

  - type: "postgresql"
    name: two_db
    config:
      username: "root"
      password: "password"
      host: "localhost"
      port: "5432"
      db_name: "aureole"
      options:
        sslmode: "disable"
        search_path: "public"

hashers:
  - type: "argon2"
    name: argon2
    config:
      kind: "argon2i"
      iterations: 1
      parallelism: 1
      salt_length: 16
      key_length: 16
      memory: 16384

  - type: "pbkdf2"
    name: django
    config:
      func: "sha256"
      iterations: 260000
      salt_length: 22
      key_length: 32

crypto_keys:
  - type: "jwk"
    name: jwk_file
    config:
      path: "lab/keys/keys.json"

  - type: "jwk"
    name: jwk_url
    config:
      path: "https://www.googleapis.com/oauth2/v3/certs"

  - type: "pem"
    name: apple_signin_key
    config:
      alg: "ES256"
      path: "lab/keys/apple_private_key.p8"

  - type: "jwk"
    name: apple_keys
    config:
      path: "https://appleid.apple.com/auth/keys"

  - type: "jwk"
    name: gen_keys
    config:
      kty: "RSA"
      alg: "RS256"
      size: 2048
      kid: "SHA-256"
      path: "lab/keys/gen_keys.json"

  - type: "jwk"
    name: service_internal_key
    config:
      path: "lab/keys/service_key.json"

senders:
  - type: "email"
    name: email
    config:
      host: "smtp.gmail.com:587"
      username: "test.aureole@gmail.com"
      password: "${SMTP_PASSWORD}"
      from: "test.aureole@gmail.com"
      bcc: [ ]
      cc: [ ]
      templates:
        default_text: "lab/templates/default.txt"
        default_html: "lab/templates/default.html"
        reset: "lab/templates/password_reset.txt"
        magic_link: "lab/templates/magic_link.txt"
        email_verification: "lab/templates/email_verification.txt"

  - type: "twilio"
    name: twilio
    config:
      account_sid: "${TEST_TWILIO_ACCOUNT_SID}"
      auth_token: "${TEST_TWILIO_AUTH_TOKEN}"
      from: "${TEST_TWILIO_PHONE_NUMBER}"
      templates:
        phone_otp: "lab/templates/phone_otp.txt"

admin_plugins:
  - type: "urls"
    name: "get-urls"