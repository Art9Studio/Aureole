api_version: "0.1"

apps:
  one:
    path_prefix: "/one"

    storages:
      main_db:
        connection_url: "postgresql://root:password@localhost:5432/test?sslmode=disable&search_path=public"
      session_db:
        connection_url: "postgresql://root:password@localhost:5432/test?sslmode=disable&search_path=public"

    main:
      use_existent_collection: false
      user_collection:
        storage: "main_db"
        name: "users"
        pk: "id"
        user_unique: "username"
        user_confirm: "password"

      authN:
        password_based:
          user_unique: "{$.name}"
          user_confirm: "{$.passwd}"

      authZ:
        cookie:
          storage: "session_db"
          domain: "localhost"
          path: "/"
          max_age: 3600
          secure: true
          http_only: false

      register:
        login_after: true
        auth_type: "jwt"
        fields:
          user_unique: "{$.name}"
          user_confirm: "{$.passwd}"
          email: "{$.email}"

    hasher:
      alg: "argon2"
      settings:
        type: "argon2i"
        iterations: 1
        parallelism: 1
        salt_length: 16
        key_length: 16
        memory: 16384

  two:
    path_prefix: "/two"

    storages:
      main_db:
        connection_config:
          adapter: "postgresql"
          username: "root"
          password: "password"
          host: "localhost"
          port: "5432"
          db_name: "test"
          options:
            sslmode: "disable"
            search_path: "public"

    main:
      use_existent_collection: false
      user_collection:
        storage: "main_db"
        name: "users"
        pk: "id"
        user_unique: "username"
        user_confirm: "password"
      authN:
        password_based:
          user_unique: "{$.name}"
          user_confirm: "{$.passwd}"
      authZ:
        jwt:
          alg: "RS256"
          keys:
            - driver: "file"
              params:
                paths:
                  - ./private.pem
          kid_alg: "docker_registry" # implement docker_registry and default and none
          payload:
            "$.userID": "id"
      #     "$.userPosts": "@getUserPosts" raw querie
      register:
        login_after: true
        auth_type: "jwt"
        fields:
          user_unique: "{$.name}"
          user_confirm: "{$.passwd}"
          email: "{$.email}"

    hasher:
      alg: "pbkdf2"
      settings:
        iterations: 1
        salt_length: 16
        key_length: 16
        func: "sha1"